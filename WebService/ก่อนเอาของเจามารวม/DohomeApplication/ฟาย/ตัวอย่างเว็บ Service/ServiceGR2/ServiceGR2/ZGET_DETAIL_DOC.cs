using System;
using System.Data;
using SourceCode.SmartObjects.Client;
using SourceCode.Hosting.Client.BaseAPI;
using System.Text;
using System.Data.Common;
using System.IO;
using System.Xml.XPath;


//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     .Net class implementation for SmartObject ZGET_DETAIL_DOC.
//     Changes to this file may cause incorrect behavior
// </auto-generated>
//------------------------------------------------------------------------------

    
namespace  SmartObjects
{

    public class ZGET_DETAIL_DOC : ZGET_DETAIL_DOC_properties
    {
        #region Fields (4)

        private readonly string _connectionString;
        private SmartObject _smartObject;
        private const string cHOST = "k2dev.uwc.com";
        private const uint cPORT = 5555;

        #endregion Fields

        #region Constructors (2)

        public ZGET_DETAIL_DOC(string connectionString)
        {
            _connectionString = connectionString;
            this.GetSmartObject();
        }
        public ZGET_DETAIL_DOC()
        {
            SCConnectionStringBuilder hostServerConnectionString = new SCConnectionStringBuilder();
            hostServerConnectionString.Host = cHOST;
            hostServerConnectionString.Port = cPORT;
            hostServerConnectionString.IsPrimaryLogin = true;
            hostServerConnectionString.Integrated = true;
            _connectionString = hostServerConnectionString.ConnectionString;
            this.GetSmartObject();
        }

        #endregion Constructors

        #region Methods (8)

        // Public Methods (2) 

        public DataTable ZGET_DETAILDOC_ZGET_DETAIL_DOC()        {

            // Set method to execute
            _smartObject.MethodToExecute = "ZGET_DETAILDOC_ZGET_DETAIL_DOC";

            // Assign Input properties
            if (IT_EX_DOC_VBELN != null)
            {
                SetPropertyValue(_smartObject.ListMethods["ZGET_DETAILDOC_ZGET_DETAIL_DOC"].InputProperties["IT_EX_DOC_VBELN"],IT_EX_DOC_VBELN);
            }
            if (IT_EX_DOC_MATNR != null)
            {
                SetPropertyValue(_smartObject.ListMethods["ZGET_DETAILDOC_ZGET_DETAIL_DOC"].InputProperties["IT_EX_DOC_MATNR"],IT_EX_DOC_MATNR);
            }
            if (IT_EX_DOC_ARKTX != null)
            {
                SetPropertyValue(_smartObject.ListMethods["ZGET_DETAILDOC_ZGET_DETAIL_DOC"].InputProperties["IT_EX_DOC_ARKTX"],IT_EX_DOC_ARKTX);
            }
            if (IT_EX_DOC_LFIMG != null)
            {
                SetPropertyValue(_smartObject.ListMethods["ZGET_DETAILDOC_ZGET_DETAIL_DOC"].InputProperties["IT_EX_DOC_LFIMG"],IT_EX_DOC_LFIMG);
            }
            if (IT_EX_DOC_VRKME != null)
            {
                SetPropertyValue(_smartObject.ListMethods["ZGET_DETAILDOC_ZGET_DETAIL_DOC"].InputProperties["IT_EX_DOC_VRKME"],IT_EX_DOC_VRKME);
            }
            if (IT_EX_DOC_WERKS != null)
            {
                SetPropertyValue(_smartObject.ListMethods["ZGET_DETAILDOC_ZGET_DETAIL_DOC"].InputProperties["IT_EX_DOC_WERKS"],IT_EX_DOC_WERKS);
            }
            if (IT_EX_DOC_LGORT != null)
            {
                SetPropertyValue(_smartObject.ListMethods["ZGET_DETAILDOC_ZGET_DETAIL_DOC"].InputProperties["IT_EX_DOC_LGORT"],IT_EX_DOC_LGORT);
            }
            if (IT_EX_DOC_ERDAT != null)
            {
                SetPropertyValue(_smartObject.ListMethods["ZGET_DETAILDOC_ZGET_DETAIL_DOC"].InputProperties["IT_EX_DOC_ERDAT"],IT_EX_DOC_ERDAT);
            }
            if (IT_EX_DOC_SERNP != null)
            {
                SetPropertyValue(_smartObject.ListMethods["ZGET_DETAILDOC_ZGET_DETAIL_DOC"].InputProperties["IT_EX_DOC_SERNP"],IT_EX_DOC_SERNP);
            }
            if (IT_EX_DOC_XCHPF != null)
            {
                SetPropertyValue(_smartObject.ListMethods["ZGET_DETAILDOC_ZGET_DETAIL_DOC"].InputProperties["IT_EX_DOC_XCHPF"],IT_EX_DOC_XCHPF);
            }
            if (IT_EX_DOC_MHDRZ != null)
            {
                SetPropertyValue(_smartObject.ListMethods["ZGET_DETAILDOC_ZGET_DETAIL_DOC"].InputProperties["IT_EX_DOC_MHDRZ"],IT_EX_DOC_MHDRZ);
            }
            if (IT_EX_DOC_MHDHB != null)
            {
                SetPropertyValue(_smartObject.ListMethods["ZGET_DETAILDOC_ZGET_DETAIL_DOC"].InputProperties["IT_EX_DOC_MHDHB"],IT_EX_DOC_MHDHB);
            }
            if (IT_IM_DOC != null)
            {
                SetPropertyValue(_smartObject.ListMethods["ZGET_DETAILDOC_ZGET_DETAIL_DOC"].InputProperties["IT_IM_DOC"],IT_IM_DOC);
            }

            try
            {
                SmartObjectClientServer soServer = CreateConnection();

                // Execute SmartObject
                using (soServer.Connection)
                {
                    return soServer.ExecuteListDataTable(_smartObject);
                }

            }
            catch (Exception ex)
            {
                throw DisplayError(ex);
            }
            finally
            {
                ClearProperties();
            }
        }

        public DbDataReader ZGET_DETAILDOC_ZGET_DETAIL_DOC_Reader()        {

            // Set method to execute
            _smartObject.MethodToExecute = "ZGET_DETAILDOC_ZGET_DETAIL_DOC";

            // Assign Input properties
            if (IT_EX_DOC_VBELN != null)
            {
                SetPropertyValue(_smartObject.ListMethods["ZGET_DETAILDOC_ZGET_DETAIL_DOC"].InputProperties["IT_EX_DOC_VBELN"],IT_EX_DOC_VBELN);
            }
            if (IT_EX_DOC_MATNR != null)
            {
                SetPropertyValue(_smartObject.ListMethods["ZGET_DETAILDOC_ZGET_DETAIL_DOC"].InputProperties["IT_EX_DOC_MATNR"],IT_EX_DOC_MATNR);
            }
            if (IT_EX_DOC_ARKTX != null)
            {
                SetPropertyValue(_smartObject.ListMethods["ZGET_DETAILDOC_ZGET_DETAIL_DOC"].InputProperties["IT_EX_DOC_ARKTX"],IT_EX_DOC_ARKTX);
            }
            if (IT_EX_DOC_LFIMG != null)
            {
                SetPropertyValue(_smartObject.ListMethods["ZGET_DETAILDOC_ZGET_DETAIL_DOC"].InputProperties["IT_EX_DOC_LFIMG"],IT_EX_DOC_LFIMG);
            }
            if (IT_EX_DOC_VRKME != null)
            {
                SetPropertyValue(_smartObject.ListMethods["ZGET_DETAILDOC_ZGET_DETAIL_DOC"].InputProperties["IT_EX_DOC_VRKME"],IT_EX_DOC_VRKME);
            }
            if (IT_EX_DOC_WERKS != null)
            {
                SetPropertyValue(_smartObject.ListMethods["ZGET_DETAILDOC_ZGET_DETAIL_DOC"].InputProperties["IT_EX_DOC_WERKS"],IT_EX_DOC_WERKS);
            }
            if (IT_EX_DOC_LGORT != null)
            {
                SetPropertyValue(_smartObject.ListMethods["ZGET_DETAILDOC_ZGET_DETAIL_DOC"].InputProperties["IT_EX_DOC_LGORT"],IT_EX_DOC_LGORT);
            }
            if (IT_EX_DOC_ERDAT != null)
            {
                SetPropertyValue(_smartObject.ListMethods["ZGET_DETAILDOC_ZGET_DETAIL_DOC"].InputProperties["IT_EX_DOC_ERDAT"],IT_EX_DOC_ERDAT);
            }
            if (IT_EX_DOC_SERNP != null)
            {
                SetPropertyValue(_smartObject.ListMethods["ZGET_DETAILDOC_ZGET_DETAIL_DOC"].InputProperties["IT_EX_DOC_SERNP"],IT_EX_DOC_SERNP);
            }
            if (IT_EX_DOC_XCHPF != null)
            {
                SetPropertyValue(_smartObject.ListMethods["ZGET_DETAILDOC_ZGET_DETAIL_DOC"].InputProperties["IT_EX_DOC_XCHPF"],IT_EX_DOC_XCHPF);
            }
            if (IT_EX_DOC_MHDRZ != null)
            {
                SetPropertyValue(_smartObject.ListMethods["ZGET_DETAILDOC_ZGET_DETAIL_DOC"].InputProperties["IT_EX_DOC_MHDRZ"],IT_EX_DOC_MHDRZ);
            }
            if (IT_EX_DOC_MHDHB != null)
            {
                SetPropertyValue(_smartObject.ListMethods["ZGET_DETAILDOC_ZGET_DETAIL_DOC"].InputProperties["IT_EX_DOC_MHDHB"],IT_EX_DOC_MHDHB);
            }
            if (IT_IM_DOC != null)
            {
                SetPropertyValue(_smartObject.ListMethods["ZGET_DETAILDOC_ZGET_DETAIL_DOC"].InputProperties["IT_IM_DOC"],IT_IM_DOC);
            }

            try
            {
                SmartObjectClientServer soServer = CreateConnection();

                // Execute SmartObject
                using (soServer.Connection)
                {
                    return soServer.ExecuteListReader(_smartObject);
                }

            }
            catch (Exception ex)
            {
                throw DisplayError(ex);
            }
            finally
            {
                ClearProperties();
            }
        }


        // Private Methods (6) 

        private void ClearProperties()
        {
            foreach (SmartProperty property in _smartObject.Properties)
            {
                property.Clear();
                property.ValueBehaviour = ValueBehaviour.None;
            }
        }

        private SmartObjectClientServer CreateConnection()
        {
            SmartObjectClientServer soServer = new SmartObjectClientServer();
            soServer.CreateConnection();
            soServer.Connection.Open(_connectionString);
            return soServer;
        }

        private Exception DisplayError(Exception ex)
        {
            if (ex is SmartObjectException)
            {
                return DisplayError(ex as SmartObjectException);
            }
            else
            {
                return ex;
            }
        }

        private Exception DisplayError(SmartObjectException smartObjectException)
        {
            StringBuilder errorMessage = new StringBuilder();
            foreach (SmartObjectExceptionData smartobjectExceptionData in smartObjectException.BrokerData)
            {
                string message = smartobjectExceptionData.Message;
                string service = smartobjectExceptionData.ServiceName;
                string serviceGuid = smartobjectExceptionData.ServiceGuid;
                string severity = smartobjectExceptionData.Severity.ToString();
                string innermessage = smartobjectExceptionData.InnerExceptionMessage;
                errorMessage.AppendLine(message);
                errorMessage.AppendLine();
                errorMessage.AppendLine("Service: " + service);
                errorMessage.AppendLine("Service Guid: " + serviceGuid);
                errorMessage.AppendLine("Severity: " + severity);
                if (!string.IsNullOrEmpty(innermessage))
                {
                    errorMessage.AppendLine("InnerException Message: " + innermessage);
                }
            }
            return new Exception(errorMessage.ToString());
        }

        private void GetSmartObject()
        {
            SmartObjectClientServer clientServer = CreateConnection();
            using (clientServer.Connection)
            {
                _smartObject = clientServer.GetSmartObject("ZGET_DETAIL_DOC");
            }
        }

  private static void SetPropertyValue(SmartProperty smartProperty, object value)
        {
            if (value == null)
            {
                smartProperty.ValueBehaviour = ValueBehaviour.Unchanged;
                smartProperty.Value = null;
            }
            else if (value == DBNull.Value)
            {
                smartProperty.ValueBehaviour = ValueBehaviour.Clear;
                smartProperty.Value = null;
            }
            else if (value.ToString() == string.Empty)
            {
                smartProperty.ValueBehaviour = ValueBehaviour.Empty;
                smartProperty.Value = string.Empty;
            }
            else
            {
                smartProperty.ValueBehaviour = ValueBehaviour.None;
                smartProperty.Value = value.ToString();
            }
        }

        #endregion Methods
    }

 public class ZGET_DETAIL_DOC_properties
    {
        #region Fields (13)

        private string _IT_EX_DOC_VBELN;
        private string _IT_EX_DOC_MATNR;
        private string _IT_EX_DOC_ARKTX;
        private double? _IT_EX_DOC_LFIMG;
        private string _IT_EX_DOC_VRKME;
        private string _IT_EX_DOC_WERKS;
        private string _IT_EX_DOC_LGORT;
        private DateTime? _IT_EX_DOC_ERDAT;
        private string _IT_EX_DOC_SERNP;
        private string _IT_EX_DOC_XCHPF;
        private double? _IT_EX_DOC_MHDRZ;
        private double? _IT_EX_DOC_MHDHB;
        private string _IT_IM_DOC;

        #endregion Fields

        #region Constructors (1)

        protected ZGET_DETAIL_DOC_properties()
        {
        }

        #endregion Constructors

        #region Properties (13)

        public string IT_EX_DOC_VBELN
        {
            get
            {
                return _IT_EX_DOC_VBELN;
            }
            set
            {
                _IT_EX_DOC_VBELN = value;
            }
        }

        public string IT_EX_DOC_MATNR
        {
            get
            {
                return _IT_EX_DOC_MATNR;
            }
            set
            {
                _IT_EX_DOC_MATNR = value;
            }
        }

        public string IT_EX_DOC_ARKTX
        {
            get
            {
                return _IT_EX_DOC_ARKTX;
            }
            set
            {
                _IT_EX_DOC_ARKTX = value;
            }
        }

        public double? IT_EX_DOC_LFIMG
        {
            get
            {
                return _IT_EX_DOC_LFIMG;
            }
            set
            {
                _IT_EX_DOC_LFIMG = value;
            }
        }

        public string IT_EX_DOC_VRKME
        {
            get
            {
                return _IT_EX_DOC_VRKME;
            }
            set
            {
                _IT_EX_DOC_VRKME = value;
            }
        }

        public string IT_EX_DOC_WERKS
        {
            get
            {
                return _IT_EX_DOC_WERKS;
            }
            set
            {
                _IT_EX_DOC_WERKS = value;
            }
        }

        public string IT_EX_DOC_LGORT
        {
            get
            {
                return _IT_EX_DOC_LGORT;
            }
            set
            {
                _IT_EX_DOC_LGORT = value;
            }
        }

        public DateTime? IT_EX_DOC_ERDAT
        {
            get
            {
                return _IT_EX_DOC_ERDAT;
            }
            set
            {
                _IT_EX_DOC_ERDAT = value;
            }
        }

        public string IT_EX_DOC_SERNP
        {
            get
            {
                return _IT_EX_DOC_SERNP;
            }
            set
            {
                _IT_EX_DOC_SERNP = value;
            }
        }

        public string IT_EX_DOC_XCHPF
        {
            get
            {
                return _IT_EX_DOC_XCHPF;
            }
            set
            {
                _IT_EX_DOC_XCHPF = value;
            }
        }

        public double? IT_EX_DOC_MHDRZ
        {
            get
            {
                return _IT_EX_DOC_MHDRZ;
            }
            set
            {
                _IT_EX_DOC_MHDRZ = value;
            }
        }

        public double? IT_EX_DOC_MHDHB
        {
            get
            {
                return _IT_EX_DOC_MHDHB;
            }
            set
            {
                _IT_EX_DOC_MHDHB = value;
            }
        }

        public string IT_IM_DOC
        {
            get
            {
                return _IT_IM_DOC;
            }
            set
            {
                _IT_IM_DOC = value;
            }
        }


        #endregion Properties

        #region Methods (14)

        // Protected Methods (14) 
        protected ZGET_DETAIL_DOC_properties GetPropertiesObject()
        {
            return new ZGET_DETAIL_DOC_properties();
        }

        protected static string SetProperty_IT_EX_DOC_VBELN(string IT_EX_DOC_VBELN)
        {
                        if(IT_EX_DOC_VBELN == null)
            {
                return null;
            }


            if(IT_EX_DOC_VBELN == string.Empty)
            {
                return null;
            }

            return IT_EX_DOC_VBELN;
        }

        protected static string SetProperty_IT_EX_DOC_MATNR(string IT_EX_DOC_MATNR)
        {
                        if(IT_EX_DOC_MATNR == null)
            {
                return null;
            }


            if(IT_EX_DOC_MATNR == string.Empty)
            {
                return null;
            }

            return IT_EX_DOC_MATNR;
        }

        protected static string SetProperty_IT_EX_DOC_ARKTX(string IT_EX_DOC_ARKTX)
        {
                        if(IT_EX_DOC_ARKTX == null)
            {
                return null;
            }


            if(IT_EX_DOC_ARKTX == string.Empty)
            {
                return null;
            }

            return IT_EX_DOC_ARKTX;
        }

        protected static double? SetProperty_IT_EX_DOC_LFIMG(string IT_EX_DOC_LFIMG)
        {
                        if(IT_EX_DOC_LFIMG == null)
            {
                return null;
            }


            if(IT_EX_DOC_LFIMG == string.Empty)
            {
                return null;
            }

            return double.Parse(IT_EX_DOC_LFIMG);
        }

        protected static string SetProperty_IT_EX_DOC_VRKME(string IT_EX_DOC_VRKME)
        {
                        if(IT_EX_DOC_VRKME == null)
            {
                return null;
            }


            if(IT_EX_DOC_VRKME == string.Empty)
            {
                return null;
            }

            return IT_EX_DOC_VRKME;
        }

        protected static string SetProperty_IT_EX_DOC_WERKS(string IT_EX_DOC_WERKS)
        {
                        if(IT_EX_DOC_WERKS == null)
            {
                return null;
            }


            if(IT_EX_DOC_WERKS == string.Empty)
            {
                return null;
            }

            return IT_EX_DOC_WERKS;
        }

        protected static string SetProperty_IT_EX_DOC_LGORT(string IT_EX_DOC_LGORT)
        {
                        if(IT_EX_DOC_LGORT == null)
            {
                return null;
            }


            if(IT_EX_DOC_LGORT == string.Empty)
            {
                return null;
            }

            return IT_EX_DOC_LGORT;
        }

        protected static DateTime? SetProperty_IT_EX_DOC_ERDAT(string IT_EX_DOC_ERDAT)
        {
                        if(IT_EX_DOC_ERDAT == null)
            {
                return null;
            }


            if(IT_EX_DOC_ERDAT == string.Empty)
            {
                return null;
            }

            return Convert.ToDateTime(IT_EX_DOC_ERDAT);
        }

        protected static string SetProperty_IT_EX_DOC_SERNP(string IT_EX_DOC_SERNP)
        {
                        if(IT_EX_DOC_SERNP == null)
            {
                return null;
            }


            if(IT_EX_DOC_SERNP == string.Empty)
            {
                return null;
            }

            return IT_EX_DOC_SERNP;
        }

        protected static string SetProperty_IT_EX_DOC_XCHPF(string IT_EX_DOC_XCHPF)
        {
                        if(IT_EX_DOC_XCHPF == null)
            {
                return null;
            }


            if(IT_EX_DOC_XCHPF == string.Empty)
            {
                return null;
            }

            return IT_EX_DOC_XCHPF;
        }

        protected static double? SetProperty_IT_EX_DOC_MHDRZ(string IT_EX_DOC_MHDRZ)
        {
                        if(IT_EX_DOC_MHDRZ == null)
            {
                return null;
            }


            if(IT_EX_DOC_MHDRZ == string.Empty)
            {
                return null;
            }

            return double.Parse(IT_EX_DOC_MHDRZ);
        }

        protected static double? SetProperty_IT_EX_DOC_MHDHB(string IT_EX_DOC_MHDHB)
        {
                        if(IT_EX_DOC_MHDHB == null)
            {
                return null;
            }


            if(IT_EX_DOC_MHDHB == string.Empty)
            {
                return null;
            }

            return double.Parse(IT_EX_DOC_MHDHB);
        }

        protected static string SetProperty_IT_IM_DOC(string IT_IM_DOC)
        {
                        if(IT_IM_DOC == null)
            {
                return null;
            }


            if(IT_IM_DOC == string.Empty)
            {
                return null;
            }

            return IT_IM_DOC;
        }


        #endregion Methods

    }
    /*
   #region Object Classes

    public abstract class NamedObject
    {

        #region Fields (3)

        private string _name;
        private string _value;
        protected const string SCNULL = "scnull";

        #endregion Fields

        #region Constructors (2)

        public NamedObject(string name, string value)
        {
            _name = name;
            _value = value;
        }

        public NamedObject(string inputValue)
        {
            this.FromValue(inputValue);
        }

        #endregion Constructors

        #region Properties (2)

        public string Name
        {
            get
            {
                return _name;
            }
            set
            {
                _name = value;
            }
        }

        public string Value
        {
            get
            {
                return _value;
            }
            set
            {
                _value = value;
            }
        }

        #endregion Properties

        #region Methods (3)

        // Public Methods (3) 

        public abstract void FromValue(string inputValue);

        public override string ToString()
        {
            return ToValue();
        }

        public abstract string ToValue();

        #endregion Methods

    }

    public class ImageObject : NamedObject
    {

        #region Constructors (2)

        public ImageObject(string name, string value)
            : base(name, value)
        {
        }

        public ImageObject(string inputValue)
            : base(inputValue)
        {
        }

        #endregion Constructors

        #region Methods (2)

        // Public Methods (2) 
        public override void FromValue(string inputValue)
        {
            if (!string.IsNullOrEmpty(inputValue))
            {
                using (StringReader reader = new StringReader(inputValue))
                {
                    XPathDocument xDoc = new XPathDocument(reader);
                    XPathNavigator xNav = xDoc.CreateNavigator();
                    string imageNameValue = xNav.SelectSingleNode("image/name").InnerXml;
                    string contentValue = xNav.SelectSingleNode("image/content").InnerXml;
                    if (imageNameValue == SCNULL)
                        this.Name = string.Empty;
                    else
                        this.Name = imageNameValue;
                    if (contentValue == SCNULL)
                        this.Value = string.Empty;
                    else
                        this.Value = contentValue;
                }
            }
            else
            {
                this.Value = string.Empty;
                this.Name = string.Empty;
            }
        }

        public override string ToValue()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("<image>");
            if (this.Name == null)
            {
                sb.Append("<name/>");
            }
            else
            {
                sb.Append("<name>");
                sb.Append(this.Name);
                sb.Append("</name>");
            }
            if (this.Value == null)
            {
                sb.Append("<content/>");
            }
            else
            {
                sb.Append("<content>");
                sb.Append(this.Value);
                sb.Append("</content>");
            }
            sb.Append("</image>");
            return sb.ToString();
        }

        #endregion Methods

    }

    public class FileObject : NamedObject
    {

        #region Constructors (2)

        public FileObject(string name, string value)
            : base(name, value)
        {
        }

        public FileObject(string inputValue)
            : base(inputValue)
        {
        }

        #endregion Constructors

        #region Methods (2)

        // Public Methods (2) 
        public override void FromValue(string inputValue)
        {
            if (!string.IsNullOrEmpty(inputValue))
            {
                using (StringReader reader = new StringReader(inputValue))
                {
                    XPathDocument xDoc = new XPathDocument(reader);
                    XPathNavigator xNav = xDoc.CreateNavigator();
                    string fileNameValue = xNav.SelectSingleNode("file/name").InnerXml;
                    string contentValue = xNav.SelectSingleNode("file/content").InnerXml;
                    if (fileNameValue == SCNULL)
                        this.Name = string.Empty;
                    else
                        this.Name = fileNameValue;
                    if (contentValue == SCNULL)
                        this.Value = string.Empty;
                    else
                        this.Value = contentValue;
                }
            }
            else
            {
                this.Value = string.Empty;
                this.Name = string.Empty;
            }
        }

        public override string ToValue()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("<file>");
            if (this.Name == null)
            {
                sb.Append("<name/>");
            }
            else
            {
                sb.Append("<name>");
                sb.Append(this.Name);
                sb.Append("</name>");
            }
            if (this.Value == null)
            {
                sb.Append("<content/>");
            }
            else
            {
                sb.Append("<content>");
                sb.Append(this.Value);
                sb.Append("</content>");
            }
            sb.Append("</file>");
            return sb.ToString();
        }

        #endregion Methods

    }

    public class HyperLinkObject : NamedObject
    {

        #region Constructors (2)

        public HyperLinkObject(string name, string value)
            : base(name, value)
        {
        }

        public HyperLinkObject(string inputValue)
            : base(inputValue)
        {
        }

        #endregion Constructors

        #region Methods (2)

        // Public Methods (2) 

        public override void FromValue(string inputValue)
        {
            if (!string.IsNullOrEmpty(inputValue))
            {
                using (StringReader reader = new StringReader(inputValue))
                {
                    XPathDocument xDoc = new XPathDocument(reader);
                    XPathNavigator xNav = xDoc.CreateNavigator();
                    string hyperLinkNameValue = xNav.SelectSingleNode("hyperlink/display").InnerXml;
                    string contentValue = xNav.SelectSingleNode("hyperlink/link").InnerXml;
                    if (hyperLinkNameValue == SCNULL)
                        this.Name = string.Empty;
                    else
                        this.Name = hyperLinkNameValue;
                    if (contentValue == SCNULL)
                        this.Value = string.Empty;
                    else
                        this.Value = contentValue;
                }
            }
            else
            {
                this.Value = string.Empty;
                this.Name = string.Empty;
            }
        }

        public override string ToValue()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("<hyperlink>");
            if (this.Name == null)
            {
                sb.Append("<link/>");
            }
            else
            {
                sb.Append("<link>");
                sb.Append(this.Name);
                sb.Append("</link>");
            }
            if (this.Value == null)
            {
                sb.Append("<display/>");
            }
            else
            {
                sb.Append("<display>");
                sb.Append(this.Value);
                sb.Append("</display>");
            }
            sb.Append("</hyperlink>");
            return sb.ToString();
        }

        #endregion Methods

    }

    #endregion
    */
}
